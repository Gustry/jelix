#!/usr/bin/env bash

set -e

basedir=$(dirname "$0")
CMD=$1


if [ ! -f $basedir/.env ]; then

  JELIX_USER_ID=${JELIX_USER_ID:-$(id -u)}
  JELIX_GROUP_ID=${JELIX_GROUP_ID:-$(id -g)}

  if [ "$JLX_BRANCH" == "" ]; then
    JLX_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    JLX_BRANCH="${JLX_BRANCH//.}"
    JLX_BRANCH="${JLX_BRANCH//-}"
  fi

  if [ "$TESTAPP_WEB_PORT" == "" ]; then
    TESTAPP_WEB_PORT=8818
  fi

  if [ "$PHP_VERSION" == "" ]; then
    PHP_VERSION=8.2
  fi

  cat <<-EOF > $basedir/.env
JELIX_USER_ID=$JELIX_USER_ID
JELIX_GROUP_ID=$JELIX_GROUP_ID
JLX_BRANCH=$JLX_BRANCH
TESTAPP_WEB_PORT=$TESTAPP_WEB_PORT
PHP_VERSION=$PHP_VERSION
EOF
else
  source $basedir/.env
fi

if [ "$CMD" == "build" ]; then
  if [ ! -f docker-conf/certs/ldap.jelix.crt ]; then
    (
    cd docker-conf;
    ./setup.sh
    )
  fi

  # be sure to have the latest image
  docker pull 3liz/liz-php-fpm:$PHP_VERSION
fi

if [ "$CMD" == "reset" ]; then
    # Stop/Remove containers
    docker compose -p jelix-${JLX_BRANCH}-tests rm -sf || true
    # Clean db volumes
    docker volume rm "jelix_${JLX_BRANCH}_pg_data" || true
    docker volume rm "jelix_${JLX_BRANCH}_mysql_data" || true
    exit 0
elif [ -z "$CMD" ]; then
    CMD="up"
else
    shift
fi

#docker compose -p jelix-${JLX_BRANCH}-tests $CMD
docker compose $CMD

